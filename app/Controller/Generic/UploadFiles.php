<?php
/**
 * Automatically generated by
 * Svift Framework <dev@svift.io>
 */
namespace App\Controller\Generic {

    use Minute\Event\Binding;
    use Minute\Event\Dispatcher;
    use Minute\Event\UserUploadEvent;
    use Minute\Session\Session;
    use Minute\View\View;

    class UploadFiles {
        /**
         * @var Dispatcher
         */
        private $dispatcher;
        /**
         * @var Session
         */
        private $session;

        /**
         * S3Uploader constructor.
         *
         * @param Dispatcher $dispatcher
         * @param Session $session
         */
        public function __construct(Dispatcher $dispatcher, Session $session, Binding $binding) {
            $this->dispatcher = $dispatcher;
            $this->session    = $session;
        }

        public function index($cb) {
            try {
                if (!empty($_FILES['upload'])) {
                    $user_id = $this->session->getLoggedInUserId();

                    for ($i = 0, $len = count($_FILES['upload']['name'] ?? []); $i < $len; $i++) {
                        if ($_FILES['upload']['error'][$i] === UPLOAD_ERR_OK) {
                            $file = $_FILES['upload']['tmp_name'][$i];

                            if (is_uploaded_file($file)) {
                                $event = new UserUploadEvent($user_id, $file, $_FILES['upload']['name'][$i]);
                                $this->dispatcher->fire(UserUploadEvent::USER_UPLOAD_FILE, $event);

                                if ($url = $event->getUrl()) {
                                    $results[] = $url;
                                }
                            }
                        }
                    }
                }

                printf('<script' . '>try { if(parent && parent["%s"]) parent["%s"].complete(%s); } catch(e) { }</script>', $cb ?? 'cb', $cb ?? 'cb', json_encode($results ?? []));
            } catch (\Throwable $e) {
                printf('<script' . '>try { if(parent && parent["%s"]) parent["%s"].fail(%s); } catch(e) { }</script>', $cb ?? 'cb', $cb ?? 'cb', json_encode($e->getMessage()));
            }
        }
    }
}